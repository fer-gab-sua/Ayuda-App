"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv


load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = os.getenv('DEBUG', 'False').strip().lower() == 'true'
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')  # Convertir a lista

print(DEBUG)
# Application definition

INSTALLED_APPS = [
    'admin_interface',
    'pianoadherentes',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'colorfield',
]

X_FRAME_OPTIONS='SAMEORIGIN'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

if DEBUG == True:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
    'default': {
        'ENGINE': os.getenv('ENGINE'),
        'NAME': os.getenv('NAME'),
        'USER': os.getenv('USER'),
        'PASSWORD': os.getenv('PASSWORD'),
        'HOST': os.getenv('HOST'),  # Usualmente 'localhost' en PythonAnywhere
        'PORT': os.getenv('PORT'),
    }
}
print('DATABASE')
print(DATABASES)
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

if DEBUG == True:
    STATICFILES_DIRS = [
        BASE_DIR / "pianoadherentes/static",
    ]
else:
    STATICFILES_DIRS = [
        '/home/fsuarez/Ayuda-App/mysite/pianoadherentes/static/',
    ]

print("static dir")
print(STATICFILES_DIRS)

# Ruta donde se recopilarán los archivos estáticos al ejecutar collectstatic
if DEBUG == True:
    STATIC_ROOT = BASE_DIR / "staticfiles"
else:
    STATIC_ROOT = BASE_DIR / "staticfiles"

print('STATIC_ROOT')
print(STATIC_ROOT)

LOGIN_URL = '/signin'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



#configuraciones del token

SESSION_COOKIE_AGE = 14400

SESSION_EXPIRE_AT_BROWSER_CLOSE = True





#SESSION_SAVE_EVERY_REQUEST = True


#CSRF_COOKIE_SECURE = True

if DEBUG == False:
    SESSION_SAVE_EVERY_REQUEST = True
    CSRF_COOKIE_SECURE = False
    #CSRF_COOKIE_SAMESITE = 'Lax'
    SESSION_COOKIE_SECURE = False
    APP_DIRS=True
    SESSION_COOKIE_DOMAIN = '.ayudamedica.net'
    CSRF_COOKIE_DOMAIN = ".ayudamedica.net"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


############ENVIO DE CORREOS CONFIGURACION ########################### ESTO LO TENGO QUE PROTEGER


# Configuración del correo electrónico
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = os.getenv('EMAIL_PORT')
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')



#configuracion para el subdominio
#CSRF_TRUSTED_ORIGINS = [
#    'https://appbp.ayudamedica.net',
#    'http://appbp.ayudamedica.net',
#]


ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'ayuda-app.onrender.com',  # Agrega tu dominio aquí
    # Puedes agregar otros dominios si es necesario
]
#esto es en la prueba
CSRF_TRUSTED_ORIGINS = [
    'https://ayuda-app.onrender.com',
]